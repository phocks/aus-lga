// --- api.js --- //
// A very simple API for retriving statistics
// for Australian LGAs (Local Government Areas)
//
// Currently:
// Population 2001 - 2011
// SEIFA scores and data
// Aboriginal and Torres Straight Islander populations
// 

var express = require('express'),
    fs = require('fs'),
    _ = require('underscore'),
    app = express(),
    config = {
      dataDir: __dirname + '/../data/'
    };

var getStateFromCode = function(code) {
  var map = [
    { state_code: 1, abbr: "NSW", name: "New South Wales" },
    { state_code: 2, abbr: "VIC", name: "Victoria" },
    { state_code: 3, abbr: "QLD", name: "Queensland" },
    { state_code: 4, abbr: "SA", name: "South Australia" },
    { state_code: 5, abbr: "WA", name: "Western Australia" },
    { state_code: 6, abbr: "TAS", name: "Tasmania" },
    { state_code: 7, abbr: "NT", name: "Northen Territory" },
    { state_code: 8, abrr: "ACT", name: "Australian Capital Territory" },
    { state_code: 9, abbr: "OTH", name: "Other Territories" }
  ];

  return map.filter(function(el) { return el.state_code == +code; })[0];
};

// Loaded sync, because nothing worthwhile can be done before 
// this these guys are loaded and parsed
var ausLgaGeoData = JSON.parse(fs.readFileSync(config.dataDir + 'aus_lga.json', 'utf8')),
    ausLgaPopulationData = JSON.parse(fs.readFileSync(config.dataDir + 'aus_lga_pop.json', 'utf8')),
    ausLgaSeifaData = JSON.parse(fs.readFileSync(config.dataDir + 'aus_lga_seifa.json', 'utf8')),
    ausLgaIndigenousData = JSON.parse(fs.readFileSync(config.dataDir + 'aus_lga_a_tsi.json', 'utf8'));

// -- Data Munging
// We attach everything to the 'properties' prop 
// of the LGA GeoJson object.
_.each(ausLgaGeoData.features, function(lga) {

  // attach all other objects here
  var lgaItem = lga.properties;

  // first, create better property names
  var lgaOriginalName = lgaItem.LGA_NAME11;

  // LGA data
  lgaItem.lga_data = {
    id: lgaItem.LGA_CODE11,
    name: lgaItem.LGA_NAME11.replace(/(\([A-Z]+\))$/g, '').trim(),
    type: (function() {
        var t = lgaItem.LGA_NAME11.match(/(\([A-Z]+\))$/g);
        return t && t[0] ? t[0] : '';
      })()
  };
  
  // State data
  lgaItem.state_data = getStateFromCode(lgaItem.STATE_CODE);
  
  // remove old property names
  delete lgaItem.STATE_CODE;
  delete lgaItem.LGA_CODE11;
  delete lgaItem.LGA_NAME11;


  // Population
  var lgaId = lgaItem.lga_data.id,
      lgaName = lgaItem.lga_data.name;
      isLGA = function(obj) { return +obj.id === +lgaId; };

  _.each(ausLgaPopulationData, function(outer) {
    // outer is an array of objects
    var result = outer.filter(isLGA);
    if( result.length === 1 ) {
      lgaItem.population_data = result[0];
    }
  });

  // SEIFA data is indexed by lga_id so nice and easy to retrieve
  lgaItem.seifa_data = ausLgaSeifaData.filter(function(item) {
    return item.lga_id === lgaId;
  })[0];

  // Aboriginal and TSI peoples data
  _.each(ausLgaIndigenousData, function(item) {
    if( item.lga_name === lgaOriginalName ) {
      var obj = _.extend(item, {lga_id: +lgaId});
      console.log(obj);
      lgaItem.indigenous_data = obj;
    }
  });
});

// --- Serve the API --- //
function listen(port) {
  app.get('/lga', function(req, res) {
    res.type('application/json');
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Credentials', true);
    res.header('Access-Control-Allow-Methods', 'POST, GET, PUT, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    res.json(ausLgaGeoData);
  });

  console.log('API listening on :' + port);
  console.log('Press Ctrl + C to stop.');
  app.listen(port);
}

exports.listen = listen;